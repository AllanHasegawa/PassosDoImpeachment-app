apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.google.gms.google-services'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

android {
    def globalConfig = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfig.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfig.getAt("androidBuildToolsVersion")

    defaultConfig {
        applicationId globalConfig.getAt("androidApplicationId")
        minSdkVersion globalConfig.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfig.getAt("androidTargetSdkVersion")
        versionCode globalConfig.getAt("androidVersionCode")
        versionName globalConfig.getAt("androidVersionName")

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner globalConfig.getAt("androidTestInstrumentationRunner")

        multiDexEnabled = globalConfig.getAt("androidMultiDexEnabled")
    }

    signingConfigs {
        release {
            storeFile file(System.getenv("DIAPP_STORE_FILE"))
            storePassword System.getenv("DIAPP_STORE_PASSWORD")
            keyAlias System.getenv("DIAPP_KEY_ALIAS")
            keyPassword System.getenv("DIAPP_KEY_PASSWORD")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.java.srcDirs += 'src/main/java'
        debug.java.srcDirs += 'src/debug/java'
    }
    packagingOptions {
        pickFirst 'META-INF/services/javax.annotation.processing.Processor'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

kapt {
    generateStubs = true
}


configurations.all {
    resolutionStrategy {
        force "com.android.support:recyclerview-v7:23.2.1", "com.android.support:design:23.2.1",
                "com.android.support:support-annotations:23.2.1"
    }
}

dependencies {
    compile project(":domain")
    compile project(":db")
    compile project(":cloud")
    compile project(":presentation")

    def androidTestDependencies = rootProject.ext.appAndroidTestDependencies
    def debugDependencies = rootProject.ext.appDebugDependencies
    def dependencies = rootProject.ext.appDependencies
    def kaptDependencies = rootProject.ext.appKaptDependencies

    androidTestCompile androidTestDependencies.support_annotations
    androidTestCompile androidTestDependencies.test_runner
    androidTestCompile androidTestDependencies.test_rules
    androidTestCompile androidTestDependencies.espresso_core
    androidTestCompile androidTestDependencies.espresso_intents
    androidTestCompile androidTestDependencies.espresso_contrib

    debugCompile debugDependencies.stheto

    compile dependencies.multidex
    compile dependencies.kotlin_stdlib
    compile dependencies.kotlin_reflect
    compile dependencies.support_design
    compile dependencies.support_cardview
    compile dependencies.support_recyclerview
    compile dependencies.support
    compile dependencies.rxkotlin
    compile dependencies.rxandroid
    compile dependencies.joda
    compile dependencies.gcm
    compile dependencies.conductor
    compile dependencies.conductor_support
    compile dependencies.butterknife
    compile dependencies.dagger2

    kapt kaptDependencies.butterknife_compiler
    kapt kaptDependencies.dagger2_compiler
}

